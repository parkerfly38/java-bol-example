/*
 * Electronic Bill Of Lading Service
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 * Do not edit the class manually.
 */

package com.nmfta.ebol.model;

import java.util.Objects;
import java.util.Arrays;
import com.google.gson.TypeAdapter;
import com.google.gson.annotations.JsonAdapter;
import com.google.gson.annotations.SerializedName;
import com.google.gson.stream.JsonReader;
import com.google.gson.stream.JsonWriter;
import com.nmfta.ebol.model.BOLRequestImagesShippingLabels;
import io.swagger.v3.oas.annotations.media.Schema;
import java.io.IOException;
/**
 * BOLRequestImages
 */


public class BOLRequestImages {
  @SerializedName("includeBol")
  private Boolean includeBol = null;

  @SerializedName("includeShippingLabels")
  private Boolean includeShippingLabels = null;

  @SerializedName("shippingLabels")
  private BOLRequestImagesShippingLabels shippingLabels = null;

  public BOLRequestImages includeBol(Boolean includeBol) {
    this.includeBol = includeBol;
    return this;
  }

   /**
   * Indicates whether or not you want an image of the populated BOL returned in the response.   Default is false. 
   * @return includeBol
  **/
  @Schema(example = "true", description = "Indicates whether or not you want an image of the populated BOL returned in the response.   Default is false. ")
  public Boolean isIncludeBol() {
    return includeBol;
  }

  public void setIncludeBol(Boolean includeBol) {
    this.includeBol = includeBol;
  }

  public BOLRequestImages includeShippingLabels(Boolean includeShippingLabels) {
    this.includeShippingLabels = includeShippingLabels;
    return this;
  }

   /**
   * Indicates whether or not you want image(s) of the shipping labels returned in the response.   Default is false. 
   * @return includeShippingLabels
  **/
  @Schema(example = "true", description = "Indicates whether or not you want image(s) of the shipping labels returned in the response.   Default is false. ")
  public Boolean isIncludeShippingLabels() {
    return includeShippingLabels;
  }

  public void setIncludeShippingLabels(Boolean includeShippingLabels) {
    this.includeShippingLabels = includeShippingLabels;
  }

  public BOLRequestImages shippingLabels(BOLRequestImagesShippingLabels shippingLabels) {
    this.shippingLabels = shippingLabels;
    return this;
  }

   /**
   * Get shippingLabels
   * @return shippingLabels
  **/
  @Schema(description = "")
  public BOLRequestImagesShippingLabels getShippingLabels() {
    return shippingLabels;
  }

  public void setShippingLabels(BOLRequestImagesShippingLabels shippingLabels) {
    this.shippingLabels = shippingLabels;
  }


  @Override
  public boolean equals(java.lang.Object o) {
    if (this == o) {
      return true;
    }
    if (o == null || getClass() != o.getClass()) {
      return false;
    }
    BOLRequestImages boLRequestImages = (BOLRequestImages) o;
    return Objects.equals(this.includeBol, boLRequestImages.includeBol) &&
        Objects.equals(this.includeShippingLabels, boLRequestImages.includeShippingLabels) &&
        Objects.equals(this.shippingLabels, boLRequestImages.shippingLabels);
  }

  @Override
  public int hashCode() {
    return Objects.hash(includeBol, includeShippingLabels, shippingLabels);
  }


  @Override
  public String toString() {
    StringBuilder sb = new StringBuilder();
    sb.append("class BOLRequestImages {\n");
    
    sb.append("    includeBol: ").append(toIndentedString(includeBol)).append("\n");
    sb.append("    includeShippingLabels: ").append(toIndentedString(includeShippingLabels)).append("\n");
    sb.append("    shippingLabels: ").append(toIndentedString(shippingLabels)).append("\n");
    sb.append("}");
    return sb.toString();
  }

  /**
   * Convert the given object to string with each line indented by 4 spaces
   * (except the first line).
   */
  private String toIndentedString(java.lang.Object o) {
    if (o == null) {
      return "null";
    }
    return o.toString().replace("\n", "\n    ");
  }

}
